"use strict";(self.webpackChunkkcl_website=self.webpackChunkkcl_website||[]).push([[67538],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,k=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(k,l(l({ref:t},p),{},{components:n})):a.createElement(k,l({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=d;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:i,l[1]=r;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56984:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={slug:"2024-02-01-biweekly-newsletter",title:"KCL Biweekly Newsletter (2024.01.19 - 2024.02.01) | KCL v0.7.5 Released and Flux Integration",authors:{name:"KCL Team",title:"KCL Team"},tags:["KCL","Biweekly-Newsletter"],image:"/img/biweekly-newsletter.png"},l=void 0,r={permalink:"/blog/2024-02-01-biweekly-newsletter",editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/blog/2024-02-01-biweekly-newsletter/index.md",source:"@site/blog/2024-02-01-biweekly-newsletter/index.md",title:"KCL Biweekly Newsletter (2024.01.19 - 2024.02.01) | KCL v0.7.5 Released and Flux Integration",description:"KCL is a constraint-based record and functional language hosted by Cloud Native Computing Foundation (CNCF) that enhances the writing of complex configurations, including those for cloud-native scenarios. With its advanced programming language technology and practices, KCL is dedicated to promoting better modularity, scalability, and stability for configurations. It enables simpler logic writing and offers ease of automation APIs and integration with homegrown systems.",date:"2024-02-01T00:00:00.000Z",formattedDate:"February 1, 2024",tags:[{label:"KCL",permalink:"/blog/tags/kcl"},{label:"Biweekly-Newsletter",permalink:"/blog/tags/biweekly-newsletter"}],readingTime:7.515,hasTruncateMarker:!1,authors:[{name:"KCL Team",title:"KCL Team"}],frontMatter:{slug:"2024-02-01-biweekly-newsletter",title:"KCL Biweekly Newsletter (2024.01.19 - 2024.02.01) | KCL v0.7.5 Released and Flux Integration",authors:{name:"KCL Team",title:"KCL Team"},tags:["KCL","Biweekly-Newsletter"],image:"/img/biweekly-newsletter.png"},prevItem:{title:"2024 LFX Mentorship Internship Launch:KCL Open Source Community Welcomes Your Participation!!!",permalink:"/blog/2024-02-05-lfs-guide"},nextItem:{title:"KCL Biweekly Newsletter (2024.01.04 - 2024.01.18) | KCL v0.7.4 Released!",permalink:"/blog/2024-01-18-biweekly-newsletter"}},s={authorsImageUrls:[void 0]},c=[{value:"Overview",id:"overview",level:2},{value:"Special Thanks",id:"special-thanks",level:2},{value:"Featured Updates",id:"featured-updates",level:2},{value:"Flux KCL Integration",id:"flux-kcl-integration",level:3},{value:"Workflow",id:"workflow",level:4},{value:"Specific Steps",id:"specific-steps",level:4},{value:"1. Prepare a Kubernetes Cluster",id:"1-prepare-a-kubernetes-cluster",level:5},{value:"2. Install Flux KCL Controller",id:"2-install-flux-kcl-controller",level:5},{value:"3. Configure the Git Repository for Continuous Delivery",id:"3-configure-the-git-repository-for-continuous-delivery",level:5},{value:"4. Commit the Application Code",id:"4-commit-the-application-code",level:5},{value:"5. Configuration Automatic Update",id:"5-configuration-automatic-update",level:5},{value:"Resources",id:"resources",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...o}=e;return(0,i.kt)(u,(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(57702).Z,width:"1141",height:"435"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang"},"KCL")," is a constraint-based record and functional language hosted by Cloud Native Computing Foundation (CNCF) that enhances the writing of complex configurations, including those for cloud-native scenarios. With its advanced programming language technology and practices, KCL is dedicated to promoting better modularity, scalability, and stability for configurations. It enables simpler logic writing and offers ease of automation APIs and integration with homegrown systems."),(0,i.kt)("p",null,"This section will update the KCL language community's latest developments every two weeks, including features, website updates, and the latest community news, helping everyone better understand the KCL community!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"KCL Website: ",(0,i.kt)("a",{parentName:"em",href:"https://kcl-lang.io"},"https://kcl-lang.io")))),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Thanks to to all contributors for their outstanding work over the past two weeks (01.19 2024 - 02.01 2024). Here is an overview of the key content:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udce6 Module Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added the ",(0,i.kt)("inlineCode",{parentName:"li"},"podinfo")," application configuration module, supporting the setting of external dynamic parameters such as ",(0,i.kt)("inlineCode",{parentName:"li"},"replicas"),". You can directly render Kubernetes manifests with a single command, and customize KCL templates based on this module.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kcl run oci://ghcr.io/kcl-lang/podinfo -D replicas=2\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83c\udfc4 Language Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Improved error messages when object attribute are not found at compile time."),(0,i.kt)("li",{parentName:"ul"},"Fixed the recursive check error for mandatory attribute of schema objects."),(0,i.kt)("li",{parentName:"ul"},"Enhanced the robustness of type-checking for schema index signatures.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udd27 Toolchain Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Documentation Tools Updates"),": Added support for HTML escaping of multiline strings in generated Markdown documentation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"CodeQL KCL Tools"),": Preliminary support for the CodeQL KCL dbschema definition and data extraction from KCL syntax and semantics, enabling static analysis and scanning of KCL code through CodeQL queries to improve code security.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udcbb IDE Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Semantic Highlighting")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"KCL IDE optimized semantic highlighting."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Enhancement for Completion Features")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Fixed the issue with erroneous completions after strings followed by comments."),(0,i.kt)("li",{parentName:"ul"},"Fixed the issue where internal property symbols in Schema could not be navigated.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83c\udf81 API Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added syntax and semantic analysis APIs for analyzing KCL code."),(0,i.kt)("li",{parentName:"ul"},"Added APIs to build binary artifacts for caching compilation results."),(0,i.kt)("li",{parentName:"ul"},"Added APIs to run binary artifacts directly, avoiding recompilation and improving performance."),(0,i.kt)("li",{parentName:"ul"},"Added code generation APIs to programmatically implement KCL code generation instead of writing complex templates.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\ude80 SDK Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Updated KCL Go SDK to version 0.7.5."),(0,i.kt)("li",{parentName:"ul"},"Updated KCL Python SDK to version 0.7.5."),(0,i.kt)("li",{parentName:"ul"},"Updated KCL Rust SDK to version 0.7.5."),(0,i.kt)("li",{parentName:"ul"},"Added definitions for syntax trees, scopes, symbols, and other syntactic and semantic structures to the KCL Java SDK, along with related query APIs.")),(0,i.kt)("p",null,"For more details, visit: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/lib"},"https://github.com/kcl-lang/lib")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udea2 Integration Updates")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In addition to the ArgoCD KCL plugin, KCL now supports GitOps for KCL configurations stored in Git/OCI repositories using the KCL Flux Controller. For more details, visit ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/flux-kcl-controller"},"https://github.com/kcl-lang/flux-kcl-controller"),". Contributions are welcome \ud83d\udc4f.")),(0,i.kt)("h2",{id:"special-thanks"},"Special Thanks"),(0,i.kt)("p",null,"The following are listed in no particular order:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Thanks to @octonawish-akcodes for contributions to KCL code cleanup and FAQ documents. \ud83d\ude4c"),(0,i.kt)("li",{parentName:"ul"},"Thanks to @satyazzz123 for contributions to the KRM KCL's support for reading environment variables. \ud83d\ude4c"),(0,i.kt)("li",{parentName:"ul"},"Thanks to @AkashKumar7902 for contributions to the KCL package management tool functionality. \ud83d\ude4c"),(0,i.kt)("li",{parentName:"ul"},"Thanks to @UtkarshUmre for contributions to the KCL linux-arm64 build CI scripts. \ud83d\ude4c"),(0,i.kt)("li",{parentName:"ul"},"Thanks to @steeling, @rozaliev, @CloudZero357, @martingreber, @az, @Art3mK, @AdmiralNemo, and @Erick for valuable suggestions and feedback during the past two weeks of using KCL. \ud83d\ude4c")),(0,i.kt)("h2",{id:"featured-updates"},"Featured Updates"),(0,i.kt)("h3",{id:"flux-kcl-integration"},"Flux KCL Integration"),(0,i.kt)("p",null,"Using KCL together with GitOps tools like Flux has the following benefits:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The abstraction and programmability capabilities of KCL can help simplify complex Kubernetes deployment configurations, reducing the error rate of manually writing YAML files. It allows for configuration constraint checks at compile-time, making it easier to detect errors. Additionally, it eliminates redundant configuration templates, improves the scalability of configurations across multiple environments and tenants, and enhances configurability and maintainability."),(0,i.kt)("li",{parentName:"ul"},"KCL allows developers to define the required resources for an application in a declarative manner. Combining KCL with Flux enables better implementation of Infrastructure as Code (IaC), improving deployment efficiency and simplifying application configuration management."),(0,i.kt)("li",{parentName:"ul"},"With Flux, developers and operations teams can manage the deployment of applications by separately modifying application and configuration code. The Flux Controller automatically synchronizes changes to the configuration, enabling continuous deployment and ensuring consistency. In case of issues, quick rollbacks can be achieved.")),(0,i.kt)("h4",{id:"workflow"},"Workflow"),(0,i.kt)("p",null,"In this example, we use a Python Flask application and GitHub Actions as a CI example. The Flux KCL Controller is deployed in the cluster as a CD example. KCL is used to define the Kubernetes resources that need to be deployed."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: You can use any containerized application and different CI/CD systems like GitLab CI, Jenkins CI, or ArgoCD in this scenario.")),(0,i.kt)("p",null,"We divide the Python Flask application code and configuration code into two repositories to separate the concerns of different roles such as developers and operations teams."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Business code repository: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/flask-demo"},"https://github.com/kcl-lang/flask-demo")),(0,i.kt)("li",{parentName:"ul"},"Manifests repository: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/flask-demo-kcl-manifests"},"https://github.com/kcl-lang/flask-demo-kcl-manifests"))),(0,i.kt)("p",null,"The overall workflow is as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Pull the application code from GitHub."),(0,i.kt)("li",{parentName:"ol"},"Develop the application code and commit it to the GitHub repository."),(0,i.kt)("li",{parentName:"ol"},"Trigger GitHub Actions to compile the application code, generate a container image, and push the container image to the Docker Hub container registry."),(0,i.kt)("li",{parentName:"ol"},"Trigger GitHub Actions to update the Kubernetes manifest deployment files defined by KCL based on the version of the container image in the docker.io container registry."),(0,i.kt)("li",{parentName:"ol"},"The Flux KCL Controller retrieves the changes to the Kubernetes manifest defined by KCL and updates the deployment to the Kubernetes cluster.")),(0,i.kt)("h4",{id:"specific-steps"},"Specific Steps"),(0,i.kt)("h5",{id:"1-prepare-a-kubernetes-cluster"},"1. Prepare a Kubernetes Cluster"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/k3d-io/k3d"},"K3d")," and create a cluster:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"k3d cluster create\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: You can use other methods to create your own Kubernetes cluster, such as kind, minikube, etc.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install kubectl"),(0,i.kt)("li",{parentName:"ul"},"Install kustomize")),(0,i.kt)("h5",{id:"2-install-flux-kcl-controller"},"2. Install Flux KCL Controller"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"flux-kcl-workflow",src:n(31680).Z,width:"1498",height:"454"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/kcl-lang/flux-kcl-controller.git && cd flux-kcl-controller && make deploy\n")),(0,i.kt)("h5",{id:"3-configure-the-git-repository-for-continuous-delivery"},"3. Configure the Git Repository for Continuous Delivery"),(0,i.kt)("p",null,"Define the ",(0,i.kt)("inlineCode",{parentName:"p"},"GitRepository")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"KCLRun")," objects in the ",(0,i.kt)("inlineCode",{parentName:"p"},"gitrepo.yaml")," file to configure the Git repository to be monitored for continuous delivery and additional parameters required for running KCL configurations."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  name: kcl-deployment\n  namespace: default\nspec:\n  interval: 10s # Check the repository every 10s\n  url: https://github.com/kcl-lang/flask-demo-kcl-manifests.git\n  ref:\n    branch: main # Monitor the main branch\n---\napiVersion: krm.kcl.dev.fluxcd/v1alpha1\nkind: KCLRun\nmetadata:\n  name: kcl-git-controller\n  namespace: default\nspec:\n  sourceRef:\n    kind: GitRepository\n    name: kcl-deployment\n")),(0,i.kt)("p",null,"Deploy the objects to the cluster using the command ",(0,i.kt)("inlineCode",{parentName:"p"},"kubectl apply -f gitrepo.yaml"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If you are using a private repository, you need to configure private repository access credentials using private key credentials. Refer to here for more details.")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: You can also use ",(0,i.kt)("a",{parentName:"p",href:"https://fluxcd.io/flux/components/source/ocirepositories/"},"OCIRepository")," in this scenario to continuously deliver the ",(0,i.kt)("inlineCode",{parentName:"p"},"oci://ghcr.io/kcl-lang/podinfo")," configuration package mentioned at the beginning of the article. For example, the following configuration:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: source.toolkit.fluxcd.io/v1beta2\nkind: OCIRepository\nmetadata:\n  name: podinfo\n  namespace: default\nspec:\n  interval: 5m0s\n  url: oci://ghcr.io/kcl-lang/podinfo\n  ref:\n    tag: latest\n---\napiVersion: krm.kcl.dev.fluxcd/v1alpha1\nkind: KCLRun\nmetadata:\n  name: kcl-git-controller\n  namespace: default\nspec:\n  sourceRef:\n    kind: OCIRepository\n    name: podinfo\n")),(0,i.kt)("h5",{id:"4-commit-the-application-code"},"4. Commit the Application Code"),(0,i.kt)("p",null,"After submitting in the ",(0,i.kt)("inlineCode",{parentName:"p"},"flask-demo")," repository, Github will automatically build a container image and push it to the Docker hub. It will also then trigger the Action of the ",(0,i.kt)("inlineCode",{parentName:"p"},"flask-demo-kcl-manifest")," repository and modify the image value in the deployment manifest repository through ",(0,i.kt)("a",{parentName:"p",href:"/docs/user_docs/guides/automation"},"KCL Automation API"),". Now let's create a submission in the ",(0,i.kt)("inlineCode",{parentName:"p"},"flask-demo")," repository, and we can see that the code submission triggers the Github CI process for the application repository."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(4991).Z,width:"2252",height:"1038"})),(0,i.kt)("h5",{id:"5-configuration-automatic-update"},"5. Configuration Automatic Update"),(0,i.kt)("p",null,"After the Github CI process in the application repository is completed, an automatic update configuration CI will be triggered in the repository where the KCL configuration is stored and submitted to the main branch of the ",(0,i.kt)("inlineCode",{parentName:"p"},"flask-demo-kcl-manifests")," repository. The commit information is as follows"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(47725).Z,width:"2240",height:"1090"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We can obtain the deployment manifest source code for compilation and validation")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/kcl-lang/flask-demo-kcl-manifests.git/\ncd flask-demo-kcl-manifests\ngit checkout main && git pull && kcl\n")),(0,i.kt)("p",null,"The output YAML is"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: flask_demo\n  labels:\n    app: flask_demo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: flask_demo\n  template:\n    metadata:\n      labels:\n        app: flask_demo\n    spec:\n      containers:\n        - name: flask_demo\n          image: "kcllang/flask_demo:6428cff4309afc8c1c40ad180bb9cfd82546be3e"\n          ports:\n            - protocol: TCP\n              containerPort: 5000\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: flask_demo\n  labels:\n    app: flask_demo\nspec:\n  type: NodePort\n  selector:\n    app: flask_demo\n  ports:\n    - port: 5000\n      protocol: TCP\n      targetPort: 5000\n')),(0,i.kt)("p",null,"From the above configuration, it can be seen that the image of the resource is indeed automatically updated to the newly constructed image value."),(0,i.kt)("p",null,"At the same time, the Flux KCL Controller will automatically pull the configuration and update it to the cluster. This achieves an end-to-end automation process for submitting business code and deploying Kubernetes, where only the business code needs to be submitted. Of course, it can be further combined with Flagger to implement various deployment strategies such as canary releases, blue-green deployments, etc."),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("p",null,"\u2764\ufe0f Thanks to all KCL users and community members for their valuable feedback and suggestions in the community. See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/community"},"here")," to join us!"),(0,i.kt)("p",null,"For more resources, please refer to"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kcl-lang.io/"},"KCL Website")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kusionstack.io/"},"KusionStack Website")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/kcl/milestone/8"},"KCL v0.8.0 Milestone"))))}m.isMDXComponent=!0},57702:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/biweekly-newsletter-fbbce78fb9c12bfc7ceee05a0a5f8870.png"},31680:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/flux-kcl-workflow-2034d3f8dd5679d0a74f94d8067e8110.png"},4991:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/app-ci-8be610b01c177f72ff2f2f617b7305bd.png"},47725:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/image-auto-update-514f27b74172b114a5dc877e98fd88f4.png"}}]);