"use strict";(self.webpackChunkkcl_website=self.webpackChunkkcl_website||[]).push([[5858],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var l=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=l.createContext({}),c=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return l.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?l.createElement(k,o(o({ref:t},u),{},{components:n})):l.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[p]="string"==typeof e?e:r,o[1]=a;for(var c=2;c<i;c++)o[c]=n[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68869:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var l=n(87462),r=(n(67294),n(3905));const i={id:"gitops-with-fluxcd",sidebar_label:"Implement GitOps with KCL and FluxCD"},o="Quick Start",a={unversionedId:"user_docs/guides/gitops/gitops-with-fluxcd",id:"version-0.8/user_docs/guides/gitops/gitops-with-fluxcd",title:"Quick Start",description:"Introduction",source:"@site/versioned_docs/version-0.8/user_docs/guides/gitops/2-fluxcd.md",sourceDirName:"user_docs/guides/gitops",slug:"/user_docs/guides/gitops/gitops-with-fluxcd",permalink:"/docs/user_docs/guides/gitops/gitops-with-fluxcd",draft:!1,editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/versioned_docs/version-0.8/user_docs/guides/gitops/2-fluxcd.md",tags:[],version:"0.8",lastUpdatedBy:"Peefy",lastUpdatedAt:1713953146,formattedLastUpdatedAt:"Apr 24, 2024",sidebarPosition:2,frontMatter:{id:"gitops-with-fluxcd",sidebar_label:"Implement GitOps with KCL and FluxCD"},sidebar:"user_docs",previous:{title:"Implement GitOps with KCL and ArgoCD",permalink:"/docs/user_docs/guides/gitops/gitops-quick-start"},next:{title:"Github Actions",permalink:"/docs/user_docs/guides/ci-integration/github-actions"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"What is GitOps",id:"what-is-gitops",level:3},{value:"GitOps with KCL and FluxCD",id:"gitops-with-kcl-and-fluxcd",level:3},{value:"Flux-KCL-Controller",id:"flux-kcl-controller",level:3},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Quick Start",id:"quick-start-1",level:2},{value:"1. Install Kubernetes and GitOps Tools",id:"1-install-kubernetes-and-gitops-tools",level:3},{value:"Configure Kubernetes Cluster and FluxCD Controller",id:"configure-kubernetes-cluster-and-fluxcd-controller",level:4},{value:"2. Write Flux-KCL-Controller Configuration File",id:"2-write-flux-kcl-controller-configuration-file",level:3},{value:"3. Check the Deployment Result",id:"3-check-the-deployment-result",level:3},{value:"4. More",id:"4-more",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,l.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quick-start"},"Quick Start"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("h3",{id:"what-is-gitops"},"What is GitOps"),(0,r.kt)("p",null,"GitOps is a modern way to do continuous delivery. Its core idea is to have a Git repository which contains environmental and application configurations. An automated process is also needed for sync the config to cluster."),(0,r.kt)("p",null,"By changing the files in repository, developers can apply the applications automatically. The benefits of applying GitOps include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Increased productivity. Continuous delivery can speed up the time of deployment."),(0,r.kt)("li",{parentName:"ul"},"Lower the barrier for developer to deploy. By pushing code instead of container configuration, developers can easily deploy Kubernetes without knowing its internal implementation."),(0,r.kt)("li",{parentName:"ul"},"Trace the change records. Managing the cluster with Git makes every change traceable, enhancing the audit trail."),(0,r.kt)("li",{parentName:"ul"},"Recover the cluster with Git's rollback and branch.")),(0,r.kt)("h3",{id:"gitops-with-kcl-and-fluxcd"},"GitOps with KCL and FluxCD"),(0,r.kt)("p",null,"Benefits of Using KCL and FluxCD Together:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"KCL can help us ",(0,r.kt)("strong",{parentName:"li"},"simplify complex Kubernetes deployment configuration files"),", reduce the error rate of manually writing YAML files, and improve code readability and maintainability."),(0,r.kt)("li",{parentName:"ul"},"FluxCD can ",(0,r.kt)("strong",{parentName:"li"},"automate")," the deployment of Kubernetes applications, achieve continuous deployment, and provide comprehensive monitoring and control functions."),(0,r.kt)("li",{parentName:"ul"},"By combining KCL and FluxCD, deployment efficiency can be improved, errors reduced, and management and monitoring of Kubernetes applications strengthened."),(0,r.kt)("li",{parentName:"ul"},"The combination of KCL and FluxCD can also help us achieve ",(0,r.kt)("strong",{parentName:"li"},"Infrastructure as Code (IaC)"),", simplify application deployment and management, and better implement DevOps principles.")),(0,r.kt)("p",null,"With GitOps, developer and operation teams can manage application deployment and configuration by modifying KCL code and generating YAML files. The GitOps toolchain will automatically synchronize the changes to the Kubernetes cluster, enabling continuous deployment and ensuring consistency. If there are issues, the GitOps toolchain can be used to quickly rollback."),(0,r.kt)("h3",{id:"flux-kcl-controller"},"Flux-KCL-Controller"),(0,r.kt)("p",null,"flux-kcl-controller is a component that integrates ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/kcl"},"KCL")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fluxcd/flux2"},"Flux"),", which is mainly used to define infrastructure and workloads based on KCL programs stored in git/oci repositories, and to achieve continuous delivery of infrastructure and workloads through ","[source-controller]","("),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(41953).Z,width:"1498",height:"454"})),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://kcl-lang.io/docs/user_docs/getting-started/install"},"KCL"))),(0,r.kt)("h2",{id:"quick-start-1"},"Quick Start"),(0,r.kt)("h3",{id:"1-install-kubernetes-and-gitops-tools"},"1. Install Kubernetes and GitOps Tools"),(0,r.kt)("h4",{id:"configure-kubernetes-cluster-and-fluxcd-controller"},"Configure Kubernetes Cluster and FluxCD Controller"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/k3d-io/k3d"},"K3d")," to create a default cluster.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"k3d cluster create mycluster\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install Flux KCL Controller")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/kcl-lang/flux-kcl-controller.git && cd flux-kcl-controller && make deploy\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check if the fluxcd controller container is initialized and running by using the ",(0,r.kt)("inlineCode",{parentName:"li"},"kubectl get")," command.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pod -n source-system -l app=kcl-controller\n")),(0,r.kt)("h3",{id:"2-write-flux-kcl-controller-configuration-file"},"2. Write Flux-KCL-Controller Configuration File"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"GitRepository")," object for ",(0,r.kt)("inlineCode",{parentName:"p"},"flux-kcl-controller")," to monitor the KCL program stored in the git repository. For example, we use the flask demo in ",(0,r.kt)("a",{parentName:"p",href:"https://kcl-lang.io/blog/2023-07-31-kcl-github-argocd-gitops/#3-get-the-application-code"},"\u201cImplementing GitOps using Github, Argo CD, and KCL to Simplify DevOps\u201d")," as an example. We create a ",(0,r.kt)("inlineCode",{parentName:"p"},"GitRepository")," object in the ",(0,r.kt)("inlineCode",{parentName:"p"},"flux-kcl-controller")," repository to monitor the KCL program stored in the git repository. Save the following content in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"gitrepo.yaml"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: source.toolkit.fluxcd.io/v1\nkind: GitRepository\nmetadata:\n  name: kcl-deployment\n  namespace: default\nspec:\n  interval: 10s # Check every 10 seconds\n  url: https://github.com/kcl-lang/flask-demo-kcl-manifests.git\n  ref:\n    branch: main # Monitor the main branch\n---\napiVersion: krm.kcl.dev.fluxcd/v1alpha1\nkind: KCLRun\nmetadata:\n  name: kcl-git-controller\n  namespace: default\nspec:\n  sourceRef:\n    kind: GitRepository\n    name: kcl-deployment\n")),(0,r.kt)("p",null,"Apply the ",(0,r.kt)("inlineCode",{parentName:"p"},"GitRepository")," object to the cluster by running the ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl apply -f gitrepo.yaml")," command."),(0,r.kt)("h3",{id:"3-check-the-deployment-result"},"3. Check the Deployment Result"),(0,r.kt)("p",null,"Check the deployment result by running the ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get deployments")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get deployments\n")),(0,r.kt)("p",null,"You can see the result, and the deployment is successful."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"NAME         READY   UP-TO-DATE   AVAILABLE   AGE\nflask-demo   1/1     1            1           17d\n")),(0,r.kt)("h3",{id:"4-more"},"4. More"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://toolkit.fluxcd.io/"},"FluxCD")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://fluxcd.io/flux/components/source/"},"Flux Source Controller")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://fluxcd.io/flux/components/source/gitrepositories/"},"GitRepositrory"))))}d.isMDXComponent=!0},41953:(e,t,n)=>{n.d(t,{Z:()=>l});const l=n.p+"assets/images/kcl-flux-65b7dca59d28e0c20578d7e47cabe102.png"}}]);