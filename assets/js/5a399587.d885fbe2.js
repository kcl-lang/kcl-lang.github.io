"use strict";(self.webpackChunkkcl_website=self.webpackChunkkcl_website||[]).push([[55254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var i=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,l=function(e,t){if(null==e)return{};var n,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=l,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?i.createElement(h,r(r({ref:t},c),{},{components:n})):i.createElement(h,r({ref:t},c))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,r=new Array(a);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:l,r[1]=o;for(var u=2;u<a;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72831:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var i=n(87462),l=(n(67294),n(3905));const a={title:"Helmfile KCL Plugin",sidebar_position:5},r=void 0,o={unversionedId:"user_docs/guides/working-with-k8s/mutate-manifests/helmfile-kcl-plugin",id:"version-0.8/user_docs/guides/working-with-k8s/mutate-manifests/helmfile-kcl-plugin",title:"Helmfile KCL Plugin",description:"Introduction",source:"@site/versioned_docs/version-0.8/user_docs/guides/working-with-k8s/3-mutate-manifests/5-helmfile-kcl-plugin.md",sourceDirName:"user_docs/guides/working-with-k8s/3-mutate-manifests",slug:"/user_docs/guides/working-with-k8s/mutate-manifests/helmfile-kcl-plugin",permalink:"/docs/user_docs/guides/working-with-k8s/mutate-manifests/helmfile-kcl-plugin",draft:!1,editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/versioned_docs/version-0.8/user_docs/guides/working-with-k8s/3-mutate-manifests/5-helmfile-kcl-plugin.md",tags:[],version:"0.8",lastUpdatedBy:"Peefy",lastUpdatedAt:1715081562,formattedLastUpdatedAt:"May 7, 2024",sidebarPosition:5,frontMatter:{title:"Helmfile KCL Plugin",sidebar_position:5},sidebar:"user_docs",previous:{title:"KPT KCL SDK",permalink:"/docs/user_docs/guides/working-with-k8s/mutate-manifests/kpt-kcl-sdk"},next:{title:"KCL Operator",permalink:"/docs/user_docs/guides/working-with-k8s/mutate-manifests/kcl-operator"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"1. Get the Example",id:"1-get-the-example",level:3},{value:"2. Test and Run",id:"2-test-and-run",level:3},{value:"Guides for Developing KCL",id:"guides-for-developing-kcl",level:2},{value:"More Documents and Examples",id:"more-documents-and-examples",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/helmfile/helmfile"},"Helmfile")," is a declarative spec for deploying helm charts. It lets you..."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Keep a directory of chart value files and maintain changes in version control."),(0,l.kt)("li",{parentName:"ul"},"Apply CI/CD to configuration changes."),(0,l.kt)("li",{parentName:"ul"},"Periodically sync to avoid skew in environments.")),(0,l.kt)("p",null,"KCL can be used to create functions to mutate and/or validate the YAML Kubernetes Resource Model (KRM) input/output format, and we provide Kustomize KCL functions to simplify the function authoring process."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Install ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/helmfile/helmfile"},"helmfile")),(0,l.kt)("li",{parentName:"ul"},"Prepare a Kubernetes cluster")),(0,l.kt)("h2",{id:"quick-start"},"Quick Start"),(0,l.kt)("p",null,"Let\u2019s write a KCL function which add annotation ",(0,l.kt)("inlineCode",{parentName:"p"},"managed-by=helmfile-kcl")," only to Deployment resources."),(0,l.kt)("h3",{id:"1-get-the-example"},"1. Get the Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/kcl-lang/helmfile-kcl.git\ncd ./helmfile-kcl/examples/hello-world/\n")),(0,l.kt)("p",null,"We can execute the command to show config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cat helmfile.yaml\n")),(0,l.kt)("p",null,"The output is"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'repositories:\n  - name: prometheus-community\n    url: https://prometheus-community.github.io/helm-charts\n\nreleases:\n  - name: prom-norbac-ubuntu\n    namespace: prometheus\n    chart: prometheus-community/prometheus\n    set:\n      - name: rbac.create\n        value: false\n    transformers:\n      # Use KCL Plugin to mutate or validate Kubernetes manifests.\n      - apiVersion: krm.kcl.dev/v1alpha1\n        kind: KCLRun\n        metadata:\n          name: "set-annotation"\n          annotations:\n            config.kubernetes.io/function: |\n              container:\n                image: docker.io/kcllang/kustomize-kcl:v0.2.0\n        spec:\n          source: |\n            [resource | {if resource.kind == "Deployment": metadata.annotations: {"managed-by" = "helmfile-kcl"}} for resource in option("resource_list").items]\n')),(0,l.kt)("p",null,"In the above config, we use a ",(0,l.kt)("inlineCode",{parentName:"p"},"KCLRun")," plugin to assign the ",(0,l.kt)("inlineCode",{parentName:"p"},"transfomer")," field. This means that we will add annotations to all deployment resources in the prometheus helm chart."),(0,l.kt)("h3",{id:"2-test-and-run"},"2. Test and Run"),(0,l.kt)("p",null,"Firstly, init the helmfile tool."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"helmfile init\n")),(0,l.kt)("p",null,"The output may looks like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"The helm plugin helm-git is not installed, do you need to install it [y/n]: y\nInstall helm plugin helm-git\nInstalled plugin: helm-git\n\nhelmfile initialization completed!\n...\n")),(0,l.kt)("p",null,"Then apply the configuration."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"helmfile apply\n")),(0,l.kt)("p",null,"The output is"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'Adding repo prometheus-community https://prometheus-community.github.io/helm-charts\n"prometheus-community" has been added to your repositories\n\n...\n')),(0,l.kt)("h2",{id:"guides-for-developing-kcl"},"Guides for Developing KCL"),(0,l.kt)("p",null,"Here's what you can do in the KCL code:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Read resources from ",(0,l.kt)("inlineCode",{parentName:"li"},'option("items")'),". The ",(0,l.kt)("inlineCode",{parentName:"li"},'option("items")')," complies with the ",(0,l.kt)("a",{parentName:"li",href:"https://kpt.dev/book/05-developing-functions/01-functions-specification"},"KRM Functions Specification"),"."),(0,l.kt)("li",{parentName:"ul"},"Return a KRM list for output resources."),(0,l.kt)("li",{parentName:"ul"},"Return an error using ",(0,l.kt)("inlineCode",{parentName:"li"},"assert {condition}, {error_message}"),"."),(0,l.kt)("li",{parentName:"ul"},"Read the PATH variables. e.g. ",(0,l.kt)("inlineCode",{parentName:"li"},'option("PATH")'),"."),(0,l.kt)("li",{parentName:"ul"},"Read the environment variables. e.g. ",(0,l.kt)("inlineCode",{parentName:"li"},'option("env")'),".")),(0,l.kt)("h2",{id:"more-documents-and-examples"},"More Documents and Examples"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/krm-kcl"},"KRM KCL Spec"))))}m.isMDXComponent=!0}}]);