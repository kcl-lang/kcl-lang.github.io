"use strict";(self.webpackChunkkcl_website=self.webpackChunkkcl_website||[]).push([[86566],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(g,r(r({ref:t},c),{},{components:n})):a.createElement(g,r({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},15382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const o={slug:"2024-01-18-biweekly-newsletter",title:"KCL Biweekly Newsletter (2024 01.04 - 2024.01.18) | KCL v0.7.4 Released!",authors:{name:"KCL Team",title:"KCL Team"},tags:["KCL","Biweekly-Newsletter"],image:"/img/biweekly-newsletter.png"},r=void 0,l={permalink:"/blog/2024-01-18-biweekly-newsletter",editUrl:"https://github.com/kcl-lang/kcl-lang.io/tree/main/blog/2024-01-18-biweekly-newsletter/index.md",source:"@site/blog/2024-01-18-biweekly-newsletter/index.md",title:"KCL Biweekly Newsletter (2024 01.04 - 2024.01.18) | KCL v0.7.4 Released!",description:"KCL is a constraint-based record and functional language hosted by Cloud Native Computing Foundation (CNCF) that enhances the writing of complex configurations, including those for cloud-native scenarios. With its advanced programming language technology and practices, KCL is dedicated to promoting better modularity, scalability, and stability for configurations. It enables simpler logic writing and offers ease of automation APIs and integration with homegrown systems.",date:"2024-01-18T00:00:00.000Z",formattedDate:"January 18, 2024",tags:[{label:"KCL",permalink:"/blog/tags/kcl"},{label:"Biweekly-Newsletter",permalink:"/blog/tags/biweekly-newsletter"}],readingTime:3.615,hasTruncateMarker:!1,authors:[{name:"KCL Team",title:"KCL Team"}],frontMatter:{slug:"2024-01-18-biweekly-newsletter",title:"KCL Biweekly Newsletter (2024 01.04 - 2024.01.18) | KCL v0.7.4 Released!",authors:{name:"KCL Team",title:"KCL Team"},tags:["KCL","Biweekly-Newsletter"],image:"/img/biweekly-newsletter.png"},prevItem:{title:"KCL Biweekly Newsletter (2024 01.19 - 2024.02.01) | KCL v0.7.5 Released and Flux Integration",permalink:"/blog/2024-02-21-biweekly-newsletter"},nextItem:{title:"KCL Biweekly Newsletter (2023 12.22 - 2024.01.04) | Crossplane KCL Integration",permalink:"/blog/2024-01-04-biweekly-newsletter"}},s={authorsImageUrls:[void 0]},p=[{value:"Overview",id:"overview",level:2},{value:"Special Thanks",id:"special-thanks",level:2},{value:"Featured Updates",id:"featured-updates",level:2},{value:"KCL IDE Semantic Highlighting Enhancement",id:"kcl-ide-semantic-highlighting-enhancement",level:3},{value:"KCL Package Management Tool Supports Adding Git Dependencies via Commit",id:"kcl-package-management-tool-supports-adding-git-dependencies-via-commit",level:3},{value:"KCL Import Tool Enhancement",id:"kcl-import-tool-enhancement",level:3},{value:"Resources",id:"resources",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...o}=e;return(0,i.kt)(m,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(57702).Z,width:"1141",height:"435"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang"},"KCL")," is a constraint-based record and functional language hosted by Cloud Native Computing Foundation (CNCF) that enhances the writing of complex configurations, including those for cloud-native scenarios. With its advanced programming language technology and practices, KCL is dedicated to promoting better modularity, scalability, and stability for configurations. It enables simpler logic writing and offers ease of automation APIs and integration with homegrown systems."),(0,i.kt)("p",null,"This section will update the KCL language community's latest developments every two weeks, including features, website updates, and the latest community news, helping everyone better understand the KCL community!"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"KCL Website: ",(0,i.kt)("a",{parentName:"em",href:"https://kcl-lang.io"},"https://kcl-lang.io")))),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Thank you to all contributors for their outstanding work over the past two weeks (01.04 2024 - 01.18 2024). Here is an overview of the key content:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83c\udf1e KCL Update")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"v0.7.4 released, adding support for Linux arm64.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83c\udf81 API Update")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added APIs for syntax and semantic analysis ")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udd27 Toolchain Update")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"kcl-go sdk update")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"KCL Doc tool supports output in OpenAPI format."),(0,i.kt)("li",{parentName:"ul"},"Added Parsing related APIs."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Import tool update")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Optimized the user experience of the import tool to generate KCL, and added support for keywords oneOf and allOf."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"KCL Package Management Tool")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Released v0.6.0, which supports adding dependencies via git commit.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\ud83d\udcbb IDE Update")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Semantic Highlighting")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"KCL IDE optimized semantic highlighting."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Enhancement for Completion Features")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Fixed the completion error in nested schema definitions"),(0,i.kt)("li",{parentName:"ul"},"Fixed the missing hover information")))),(0,i.kt)("h2",{id:"special-thanks"},"Special Thanks"),(0,i.kt)("p",null,"The following are listed in no particular order:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Thanks to @jakezhu9 for his continuous contribution to the kcl import tool \ud83e\udd1d"),(0,i.kt)("li",{parentName:"ul"},"Thanks to @AdmiralNemo, @Phillip Neumann, @Naxe, @steeling, etc. for their valuable feedback and suggestions in the use of KCL \ud83d\ude4c")),(0,i.kt)("h2",{id:"featured-updates"},"Featured Updates"),(0,i.kt)("h3",{id:"kcl-ide-semantic-highlighting-enhancement"},"KCL IDE Semantic Highlighting Enhancement"),(0,i.kt)("p",null,"KCL IDE previously only supported KCL syntax highlighting, as shown in the figure below:"),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(70202).Z,width:"435",height:"151"})),(0,i.kt)("p",null,"This year, we gradually enabled the new KCL semantic architecture model. With the support of the new semantic architecture, KCL IDE supports semantic-level highlighting, and the code related to semantics will be highlighted in the same way."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(50297).Z,width:"287",height:"145"})),(0,i.kt)("p",null,"For more information about the KCL semantic architecture model, please refer to:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kcl-lang.io/blog/2023-12-09-kcl-new-semantic-model"},"Unlocking Advanced Code Intelligence with the KCL Semantic Model")),(0,i.kt)("h3",{id:"kcl-package-management-tool-supports-adding-git-dependencies-via-commit"},"KCL Package Management Tool Supports Adding Git Dependencies via Commit"),(0,i.kt)("p",null,"KCL Package Management Tool supports adding git dependencies via commit.\nTake ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/KusionStack/catalog"},"https://github.com/KusionStack/catalog")," as an example, add commit a29e3db as a dependency. You can add it directly through the dependency in the kcl.mod file or the command line."),(0,i.kt)("p",null,"Edit the kcl.mod file as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[dependencies]\ncatalog = { git = "https://github.com/KusionStack/catalog.git", commit = "a29e3db" }\n')),(0,i.kt)("p",null,"Or add it via the command line:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"kcl mod add -git https://github.com/KusionStack/catalog.git -commit a29e3db\n")),(0,i.kt)("h3",{id:"kcl-import-tool-enhancement"},"KCL Import Tool Enhancement"),(0,i.kt)("p",null,"The import tool supports the generation with oneOf and allOf keywords. Take the oneOf keyword as an example, save the following content in the file oneof.json."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "$id": "https://example.com/schemas/book.json",\n  "type": "object",\n  "properties": {\n    "title": {\n      "type": "string"\n    },\n    "author": {\n      "$comment": "oneOf for types",\n      "oneOf": [\n        {\n          "type": "string"\n        },\n        {\n          "type": "array",\n          "items": {\n            "type": "string"\n          }\n        },\n        {\n          "type": "integer"\n        }\n      ]\n    },\n    "category": {\n      "$comment": "oneOf for objects",\n      "oneOf": [\n        {\n          "type": "object",\n          "properties": {\n            "name": {\n              "type": "string"\n            }\n          }\n        },\n        {\n          "type": "object",\n          "properties": {\n            "title": {\n              "type": "string"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n')),(0,i.kt)("p",null,"Through the import command, you can generate the corresponding KCL file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"kcl import oneof.json\n")),(0,i.kt)("p",null,"You can see that the generated oneof.k file content is as follows."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kcl"},'"""\nThis file was generated by the KCL auto-gen tool. DO NOT EDIT.\nEditing this file might prove futile when you re-run the KCL auto-gen generate command.\n"""\n\nschema Book:\n    r"""\n    Book\n\n    Attributes\n    ----------\n    title : str, optional\n    author : str | [str] | int, optional\n    category : BookCategoryOneOf0 | BookCategoryOneOf1, optional\n    """\n\n    title?: str\n    author?: str | [str] | int\n    category?: BookCategoryOneOf0 | BookCategoryOneOf1\n\nschema BookCategoryOneOf0:\n    r"""\n    BookCategoryOneOf0\n\n    Attributes\n    ----------\n    name : str, optional\n    """\n\n    name?: str\n\nschema BookCategoryOneOf1:\n    r"""\n    BookCategoryOneOf1\n\n    Attributes\n    ----------\n    title : str, optional\n    """\n\n    title?: str\n')),(0,i.kt)("h2",{id:"resources"},"Resources"),(0,i.kt)("p",null,"\u2764\ufe0f Thanks to all KCL users and community members for their valuable feedback and suggestions in the community. See ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kcl-lang/community"},"here")," to join us!"),(0,i.kt)("p",null,"For more resources, please refer to"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kcl-lang.io/"},"KCL Website")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kusionstack.io/"},"KusionStack Website")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kcl-lang/kcl/milestone/8"},"KCL v0.8.0 Milestone"))))}u.isMDXComponent=!0},57702:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/biweekly-newsletter-fbbce78fb9c12bfc7ceee05a0a5f8870.png"},50297:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/new-ide-a62fcf4ef6b9d078f77a7e15af161e17.png"},70202:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/old-ide-835ff47b36b5e23f304f8092c3afd989.png"}}]);